<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="employee-system-api-test-suite.xml" />
	<munit:test name="employee-system-api-test-suite-get:\get-loan-status\(id):employee-system-api-configTest" doc:id="737a92af-cfd1-40e2-916d-e1fda389d877" description="Test">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="bd49441b-541c-40d6-a6b1-d3cf9a54b18d" processor="snowflake:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8b73d5d1-fcdb-4311-81bb-0f84d542601b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('get-loan-status/loan-status.json')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="d6a01271-7d7c-491d-81e5-fa24f0b7dcf0" >
				<munit:attributes value="#[{uriParams:{id:1}}]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to get:\get-loan-status\(id):employee-system-api-config" doc:id="2c2e069e-3497-4961-a826-3644a8b75486" name="get:\get-loan-status\(id):employee-system-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="da327af8-e6fa-4d80-b495-38b05096f799" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="employee-system-api-test-suite-put:\update-employee-details:application\json:employee-system-api-configTest" doc:id="3ba1862a-dc33-4c2a-adf0-c548d1da187b" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="5b0073b8-ba2f-47b4-97ed-bb73a1318cab" processor="snowflake:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f5003a2c-38cf-433c-a4ef-86d3c6f4b621" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('post-mg1-approval/update.json')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="f98292cf-3980-40c6-a54a-923b1ed36c13" >
				<munit:payload value="#[output application/json --- readUrl('classpath://post-update-employee/update-emplyee.json')]" encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to put:\update-employee-details:application\json:employee-system-api-config" doc:id="d5282b83-07bd-4b0f-85ba-3da5e1a66dbe" name="put:\update-employee-details:application\json:employee-system-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="88057d5e-b5fd-4e5e-8351-9542376342e3" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="employee-system-api-test-suite-get:\get-loan-status\(id):employee-system-api-configTest1" doc:id="96250e2f-8cda-4854-adb8-2fe08d8ff546" description="Test" expectedErrorType="LOAN_STATUS:NOT_FOUND" expectedErrorDescription="customer loan status is not available or customer is not registered">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="8ded489b-4b4e-4392-a597-ad8489d98d0d" processor="snowflake:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8b73d5d1-fcdb-4311-81bb-0f84d542601b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('get-loan-status/fail.json')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="58074ed7-5a3b-474e-83f7-b8268d215222" >
				<munit:attributes value="#[{uriParams:{id:1}}]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to get:\get-loan-status\(id):employee-system-api-config" doc:id="97bbb237-0ef0-4918-bc8e-3fce44042ecb" name="get:\get-loan-status\(id):employee-system-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="628cffe6-1dc6-49af-9b76-b8a5d554afb0" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="employee-system-api-test-suite-post:\mg1-approval:application\json:employee-system-api-configTest" doc:id="4b493213-b2dd-4079-a143-d58c183c835d" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="29c25652-01bf-4599-afde-e3fd9e5fdd29" processor="snowflake:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ada19104-bf8b-42c6-924d-8f5483d982e7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('post-mg1-approval/update.json')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="ff19946a-c47c-4e36-81d3-c55a3c1c5062" >
				<munit:payload value="#[output application/json --- readUrl('classpath://post-mg1-approval/mg1-approval.json')]" encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\mg1-approval:application\json:employee-system-api-config" doc:id="a3c7a269-2c38-4b35-8c07-f2fa5b504e65" name="post:\mg1-approval:application\json:employee-system-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="ef703e8e-c7b0-411c-9fa4-d6efb8de5389" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="employee-system-api-test-suite-post:\mg2-approval:application\json:employee-system-api-configTest" doc:id="7f312e3e-55bd-47b5-aa69-cf6b32cccbf6" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="75500ca1-edaa-4d45-a05f-5174e042c555" processor="snowflake:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ac7ec57c-1459-4d0d-99a5-bc730628f526" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('post-mg1-approval/update.json')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="9abe444e-c7bb-4dee-9aed-f616f64a2c0c" >
				<munit:payload value="#[output application/json --- readUrl('classpath://post-mg1-approval/mg1-approval.json')]" encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to post:\mg2-approval:application\json:employee-system-api-config" doc:id="ab91e50f-65cf-471c-90b1-274a0ceca6f2" name="post:\mg2-approval:application\json:employee-system-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="31888504-770d-4a47-bbfc-8b651256fd89" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>


</mule>
